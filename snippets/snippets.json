{
  "React Native : NavigationContainer Container": {
    "prefix": "nav-app",
    "body": [
      "import 'react-native-gesture-handler';",
      "import * as React from 'react'",
      "import {StyleSheet} from 'react-native'",
      "import { NavigationContainer } from '@react-navigation/native';",
      "",
      "const $1 = () => {",
      "\treturn (",
      "\t\t<NavigationContainer>",
      "\t\t\t{/* Rest of your app code */}",
      "\t\t</NavigationContainer>",
      "\t);",
      "}",
      "const styles = StyleSheet.create({});",
      "export default $1;"
    ]
  },
  "React Native : NavigationContainer Container with redux": {
    "prefix": "nav-app-redux",
    "body": [
      "import 'react-native-gesture-handler';",
      "import * as React from 'react'",
      "import {StyleSheet} from 'react-native'",
      "import { NavigationContainer } from '@react-navigation/native';",
      "",
      "//redux",
      "import {connect} from 'react-redux';",
      "import { bindActionCreators } from 'redux';",
      "",
      "//import actions here",
      "const $1 = () => {",
      "\treturn (",
      "\t\t<NavigationContainer>",
      "\t\t\t{/* Rest of your app code */}",
      "\t\t</NavigationContainer>",
      "\t);",
      "}",
      "",
      "const styles = StyleSheet.create({});",
      "",
      "const mapStateToProps = state => {",
      "\treturn {",
      "\t\tstate",
      "\t};",
      "};",
      "const mapDispatchToProps = dispatch => ",
      "\tbindActionCreators(",
      "\t\t{",
      "\t\t\t//add actions here",
      "\t\t},",
      "\t\tdispatch,",
      "\t);",
      "",
      "export default connect(mapStateToProps, mapDispatchToProps)($1);"
    ]
  },
  "React Native : Stack Navigation": {
    "prefix": "nav-stack",
    "body": [
      "import * as React from 'react'",
      "import {StyleSheet} from 'react-native'",
      "import { createStackNavigator } from '@react-navigation/stack';",
      "",
      "const Stack = createStackNavigator();",
      "const $1 = () => {",
      "\treturn (",
      "\t\t<Stack.Navigator",
      "\t\t\tinitialRouteName=\"\"",
      "\t\t\tkeyboardHandlingEnabled={true}",
      "\t\t\tmode={'card'} // option (modal)",
      "\t\t\theaderMode={'screen'} // option (screen, float, none)",
      "\t\t>",
      "\t\t\t<Stack.Screen",
      "\t\t\t\tname=\"Home\"",
      "\t\t\t\tcomponent={HomeScreen}",
      "\t\t\t\toptions={",
      "\t\t\t\t\t{",
      "\t\t\t\t\t\ttitle: 'Title',",
      "\t\t\t\t\t\theaderTitleAlign: 'center', // option (center, left) Defaults to center on iOS and left on Android.",
      "\t\t\t\t\t\theaderStyle: {},",
      "\t\t\t\t\t\theaderTitleStyle: {},",
      "\t\t\t\t\t\theaderBackTitleStyle: {},",
      "\t\t\t\t\t\theaderLeftContainerStyle: {},",
      "\t\t\t\t\t\theaderTitleContainerStyle: {},",
      "\t\t\t\t\t\theaderRightContainerStyle: {},",
      "\t\t\t\t\t\theaderTintColor: '',",
      "\t\t\t\t\t\theaderTransparent: false,",
      "\t\t\t\t\t\tcardShadowEnabled: true,",
      "\t\t\t\t\t\tcardOverlayEnabled: true, // Defaults to true on Android and false on iOS.",
      "\t\t\t\t\t\t//headerStatusBarHeight: 0,",
      "\t\t\t\t\t\t//headerBackground: settings => { return null },",
      "\t\t\t\t\t\t//header: settings => { return null }, // React Element",
      "\t\t\t\t\t\t//headerTitle:settings => { return null }, // React Element",
      "\t\t\t\t\t\t//headerRight: settings => { return null }, // React Element",
      "\t\t\t\t\t\t//headerLeft: settings => { return null }, // React Element",
      "\t\t\t\t\t\t//headerBackImage: settings => { return null }, // React element",
      "\t\t\t\t\t\t//headerBackTitle:'', // Title string used by the back button on iOS. Defaults to the previous scene's headerTitle",
      "\t\t\t\t\t\t//headerBackTitleVisible:true,",
      "\t\t\t\t\t}",
      "\t\t\t\t}",
      "\t\t\t/>",
      "\t\t</Stack.Navigator>",
      "\t);",
      "}",
      "export default $1;"
    ]
  },
  "React Native : Stack Navigation Screen": {
    "prefix": "nav-stack-screen",
    "body": [
      "<Stack.Screen",
      "\tname=\"$1\"",
      "\tcomponent={$1}",
      "\toptions={",
      "\t\t{",
      "\t\t\ttitle: 'Title',",
      "\t\t\theaderTitleAlign: 'center', // option (center, left) Defaults to center on iOS and left on Android.",
      "\t\t\theaderStyle: {},",
      "\t\t\theaderTitleStyle: {},",
      "\t\t\theaderBackTitleStyle: {},",
      "\t\t\theaderLeftContainerStyle: {},",
      "\t\t\theaderTitleContainerStyle: {},",
      "\t\t\theaderRightContainerStyle: {},",
      "\t\t\theaderTintColor: '',",
      "\t\t\theaderTransparent: false,",
      "\t\t\tcardShadowEnabled: true,",
      "\t\t\tcardOverlayEnabled: true, // Defaults to true on Android and false on iOS.",
      "\t\t\t//headerStatusBarHeight: 0,",
      "\t\t\t//headerBackground: settings => { return null },",
      "\t\t\t//header: settings => { return null }, // React Element",
      "\t\t\t//headerTitle:settings => { return null }, // React Element",
      "\t\t\t//headerRight: settings => { return null }, // React Element",
      "\t\t\t//headerLeft: settings => { return null }, // React Element",
      "\t\t\t//headerBackImage: settings => { return null }, // React element",
      "\t\t\t//headerBackTitle:'', // Title string used by the back button on iOS. Defaults to the previous scene's headerTitle",
      "\t\t\t//headerBackTitleVisible:true,",
      "\t\t}",
      "\t}",
      "/>"
    ]
  },
  "React Native : Stack Navigation With Redux": {
    "prefix": "nav-stack-redux",
    "body": [
      "import * as React from 'react'",
      "import {StyleSheet} from 'react-native'",
      "import { createStackNavigator } from '@react-navigation/stack';",
      "",
      "//redux",
      "import {connect} from 'react-redux';",
      "import { bindActionCreators } from 'redux';",
      "",
      "//import actions here",
      "const Stack = createStackNavigator();",
      "const $1 = () => {",
      "\treturn (",
      "\t\t<Stack.Navigator",
      "\t\t\tinitialRouteName=\"\"",
      "\t\t\tkeyboardHandlingEnabled={true}",
      "\t\t\tmode={'card'} // option (modal)",
      "\t\t\theaderMode={'screen'} // option (screen, float, none)",
      "\t\t>",
      "\t\t\t<Stack.Screen",
      "\t\t\t\tname=\"Home\"",
      "\t\t\t\tcomponent={HomeScreen}",
      "\t\t\t\toptions={",
      "\t\t\t\t\t{",
      "\t\t\t\t\t\ttitle: 'Title',",
      "\t\t\t\t\t\theaderTitleAlign: 'center', // option (center, left) Defaults to center on iOS and left on Android.",
      "\t\t\t\t\t\theaderStyle: {},",
      "\t\t\t\t\t\theaderTitleStyle: {},",
      "\t\t\t\t\t\theaderBackTitleStyle: {},",
      "\t\t\t\t\t\theaderLeftContainerStyle: {},",
      "\t\t\t\t\t\theaderTitleContainerStyle: {},",
      "\t\t\t\t\t\theaderRightContainerStyle: {},",
      "\t\t\t\t\t\theaderTintColor: '',",
      "\t\t\t\t\t\theaderTransparent: false,",
      "\t\t\t\t\t\tcardShadowEnabled: true,",
      "\t\t\t\t\t\tcardOverlayEnabled: true, // Defaults to true on Android and false on iOS.",
      "\t\t\t\t\t\t//headerStatusBarHeight: 0,",
      "\t\t\t\t\t\t//headerBackground: settings => { return null },",
      "\t\t\t\t\t\t//header: settings => { return null }, // React Element",
      "\t\t\t\t\t\t//headerTitle:settings => { return null }, // React Element",
      "\t\t\t\t\t\t//headerRight: settings => { return null }, // React Element",
      "\t\t\t\t\t\t//headerLeft: settings => { return null }, // React Element",
      "\t\t\t\t\t\t//headerBackImage: settings => { return null }, // React element",
      "\t\t\t\t\t\t//headerBackTitle:'', // Title string used by the back button on iOS. Defaults to the previous scene's headerTitle",
      "\t\t\t\t\t\t//headerBackTitleVisible:true,",
      "\t\t\t\t\t}",
      "\t\t\t\t}",
      "\t\t\t/>",
      "\t\t</Stack.Navigator>",
      "\t);",
      "}",
      "",
      "const styles = StyleSheet.create({});",
      "",
      "const mapStateToProps = state => {",
      "\treturn {",
      "\t\tstate",
      "\t};",
      "};",
      "const mapDispatchToProps = dispatch => ",
      "\tbindActionCreators(",
      "\t\t{",
      "\t\t\t//add actions here",
      "\t\t},",
      "\t\tdispatch,",
      "\t);",
      "",
      "export default connect(mapStateToProps, mapDispatchToProps)($1);"
    ]
  },
  "React Native : Drawer Navigation": {
    "prefix": "nav-drawer",
    "body": [
      "import { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';",
      "import * as React from 'react'",
      "import {StyleSheet} from 'react-native'",
      "const CustomDrawerContent = props => {",
      "\treturn (",
      "\t\t<DrawerContentScrollView {...props}>",
      "\t\t\t<DrawerItemList {...props} />",
      "\t\t\t<DrawerItem",
      "\t\t\t\tlabel=\"Help\"",
      "\t\t\t\tonPress={_=> alert('Help Pressed!')}",
      "\t\t\t/>",
      "\t\t</DrawerContentScrollView>",
      "\t)",
      "}",
      "const Drawer = createDrawerNavigator();",
      "const $1 = () => {",
      "\treturn (",
      "\t\t<Drawer.Navigator",
      "\t\t\tinitialRouteName=\"\"",
      "\t\t\tdrawerContent={(props) => <CustomDrawerContent {...props} />}",
      "\t\t\tscreenOptions={}",
      "\t\t\topenByDefault={false}",
      "\t\t\tdrawerPosition={'left'} // options (left, right)",
      "\t\t\tdrawerType={'front'} // options (front, back, slide, permanent)",
      "\t\t\tdrawerStyle={{}}",
      "\t\t\tdrawerContentOptions={",
      "\t\t\t\t{",
      "\t\t\t\t\tactiveTintColor:'black',",
      "\t\t\t\t\tactiveBackgroundColor:'white',",
      "\t\t\t\t\tinactiveTintColor:'grey',",
      "\t\t\t\t\tinactiveBackgroundColor:'lightgrey',",
      "\t\t\t\t\titemStyle:{},",
      "\t\t\t\t\tlabelStyle:{},",
      "\t\t\t\t\tcontentContainerStyle:{},",
      "\t\t\t\t\tstyle:{},",
      "\t\t\t\t}",
      "\t\t\t}",
      "\t\t\t//sceneContainerStyle={{}}",
      "\t\t\thideStatusBar={false}",
      "\t\t\tstatusBarAnimation={'slide'}",
      "\t\t\tkeyboardDismissMode={'on-drag'} // options (on-drag, none)",
      "\t\t\tbackBehavior={'initialRoute'} // options (initialRoute, order, history, none) ",
      "\t\t\t//edgeWidth={''}",
      "\t\t\t//minSwipeDistance={''}",
      "\t\t\t//overlayColor={''}",
      "\t\t>",
      "\t\t\t<Drawer.Screen",
      "\t\t\t\tname=\"Feed\"",
      "\t\t\t\tcomponent={Feed}",
      "\t\t\t\toptions={",
      "\t\t\t\t\t{",
      "\t\t\t\t\t\ttitle:'Title',",
      "\t\t\t\t\t\tswipeEnable: true,",
      "\t\t\t\t\t\tgestureEnabled: true,",
      "\t\t\t\t\t\tunmountOnBlur: false,",
      "\t\t\t\t\t\tdrawerLabel: settings => undefined,",
      "\t\t\t\t\t\tdrawerIcon: settings => undefined, //React Element",
      "\t\t\t\t\t\tdrawerIcon: settings => undefined, //React Element",
      "\t\t\t\t\t}",
      "\t\t\t\t}",
      "\t\t\t/>",
      "\t\t</Drawer.Navigator>",
      "\t)",
      "}",
      "const styles = StyleSheet.create({});",
      "export default $1;"
    ]
  },
  "React Native : Drawer Navigation Screen": {
    "prefix": "nav-drawer-screen",
    "body": [
      "<Drawer.Screen",
      "\tname=\"$1\"",
      "\tcomponent={$1}",
      "\toptions={",
      "\t\t{",
      "\t\t\ttitle:'Title',",
      "\t\t\tswipeEnable: true,",
      "\t\t\tgestureEnabled: true,",
      "\t\t\tunmountOnBlur: false,",
      "\t\t\tdrawerLabel: settings => undefined,",
      "\t\t\tdrawerIcon: settings => undefined, //React Element",
      "\t\t\tdrawerIcon: settings => undefined, //React Element",
      "\t\t}",
      "\t}",
      "/>"
    ]
  },
  "React Native : Drawer Navigation With redux": {
    "prefix": "nav-drawer-redux",
    "body": [
      "import { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';",
      "import * as React from 'react'",
      "import {StyleSheet} from 'react-native'",
      "//redux",
      "import {connect} from 'react-redux';",
      "import { bindActionCreators } from 'redux';",
      "",
      "//import actions here",
      "const CustomDrawerContent = props => {",
      "\treturn (",
      "\t\t<DrawerContentScrollView {...props}>",
      "\t\t\t<DrawerItemList {...props} />",
      "\t\t\t<DrawerItem",
      "\t\t\t\tlabel=\"Help\"",
      "\t\t\t\tonPress={_=> alert('Help Pressed!')}",
      "\t\t\t/>",
      "\t\t</DrawerContentScrollView>",
      "\t)",
      "}",
      "const Drawer = createDrawerNavigator();",
      "const $1 = () => {",
      "\treturn (",
      "\t\t<Drawer.Navigator",
      "\t\t\tinitialRouteName=\"\"",
      "\t\t\tdrawerContent={(props) => <CustomDrawerContent {...props} />}",
      "\t\t\tscreenOptions={}",
      "\t\t\topenByDefault={false}",
      "\t\t\tdrawerPosition={'left'} // options (left, right)",
      "\t\t\tdrawerType={'front'} // options (front, back, slide, permanent)",
      "\t\t\tdrawerStyle={{}}",
      "\t\t\tdrawerContentOptions={",
      "\t\t\t\t{",
      "\t\t\t\t\tactiveTintColor:'black',",
      "\t\t\t\t\tactiveBackgroundColor:'white',",
      "\t\t\t\t\tinactiveTintColor:'grey',",
      "\t\t\t\t\tinactiveBackgroundColor:'lightgrey',",
      "\t\t\t\t\titemStyle:{},",
      "\t\t\t\t\tlabelStyle:{},",
      "\t\t\t\t\tcontentContainerStyle:{},",
      "\t\t\t\t\tstyle:{},",
      "\t\t\t\t}",
      "\t\t\t}",
      "\t\t\t//sceneContainerStyle={{}}",
      "\t\t\thideStatusBar={false}",
      "\t\t\tstatusBarAnimation={'slide'}",
      "\t\t\tkeyboardDismissMode={'on-drag'} // options (on-drag, none)",
      "\t\t\tbackBehavior={'initialRoute'} // options (initialRoute, order, history, none) ",
      "\t\t\t//edgeWidth={''}",
      "\t\t\t//minSwipeDistance={''}",
      "\t\t\t//overlayColor={''}",
      "\t\t>",
      "\t\t\t<Drawer.Screen",
      "\t\t\t\tname=\"Feed\"",
      "\t\t\t\tcomponent={Feed}",
      "\t\t\t\toptions={",
      "\t\t\t\t\t{",
      "\t\t\t\t\t\ttitle:'Title',",
      "\t\t\t\t\t\tswipeEnable: true,",
      "\t\t\t\t\t\tgestureEnabled: true,",
      "\t\t\t\t\t\tunmountOnBlur: false,",
      "\t\t\t\t\t\tdrawerLabel: settings => undefined,",
      "\t\t\t\t\t\tdrawerIcon: settings => undefined, //React Element",
      "\t\t\t\t\t\tdrawerIcon: settings => undefined, //React Element",
      "\t\t\t\t\t}",
      "\t\t\t\t}",
      "\t\t\t/>",
      "\t\t</Drawer.Navigator>",
      "\t)",
      "}",
      "const styles = StyleSheet.create({});",
      "",
      "const mapStateToProps = state => {",
      "\treturn {",
      "\t\tstate",
      "\t};",
      "};",
      "const mapDispatchToProps = dispatch => ",
      "\tbindActionCreators(",
      "\t\t{",
      "\t\t\t//add actions here",
      "\t\t},",
      "\t\tdispatch,",
      "\t);",
      "",
      "export default connect(mapStateToProps, mapDispatchToProps)($1);"
    ]
  },
  "React Native : Bootom Tab Navigation": {
    "prefix": "nav-tab",
    "body": [
      "import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';",
      "import * as React from 'react'",
      "import {StyleSheet} from 'react-native'",
      "const Tab = createBottomTabNavigator();",
      "const $1 = () => {",
      "\treturn (",
      "\t\t<Tab.Navigator",
      "\t\t\tinitialRouteName=\"\"",
      "\t\t\tscreenOptions={{}}",
      "\t\t\t//tabBar={_=> null} // REact Element to display tab bar.",
      "\t\t\tbackBehavior=\"initialRoute\" // options (initialRoute, order, history, none) ",
      "\t\t\ttabBarOptions={",
      "\t\t\t\t{",
      "\t\t\t\t\tactiveTintColor:'black',",
      "\t\t\t\t\tactiveBackgroundColor:'white',",
      "\t\t\t\t\tinactiveTintColor:'grey',",
      "\t\t\t\t\tinactiveBackgroundColor:'lightgrey',",
      "\t\t\t\t\tshowLabel:true,",
      "\t\t\t\t\tshowIcon:true,",
      "\t\t\t\t\tstyle:{},",
      "\t\t\t\t\tlabelStyle:{},",
      "\t\t\t\t\tlabelPosition:'beside-icon', // options (below-icon) ",
      "\t\t\t\t\tkeyboardHidesTabBar:false,",
      "\t\t\t\t}",
      "\t\t\t}",
      "\t\t>",
      "\t\t\t<Tab.Screen",
      "\t\t\t\tname=\"Feed\"",
      "\t\t\t\tcomponent={Feed}",
      "\t\t\t\toptions={",
      "\t\t\t\t\t{",
      "\t\t\t\t\t\ttitle: 'Title',",
      "\t\t\t\t\t\ttabBarVisible: true,",
      "\t\t\t\t\t\ttabBarIcon: settings => undefined, // React Element",
      "\t\t\t\t\t\ttabBarLabel: settings => undefined, // React Element",
      "\t\t\t\t\t\ttabBarButton: settings => undefined, // React Element",
      "\t\t\t\t\t\tunmountOnBlur: false, ",
      "\t\t\t\t\t}",
      "\t\t\t\t}",
      "\t\t\t/>",
      "\t\t</Tab.Navigator>",
      "\t);",
      "}",
      "export default $1"
    ]
  },
  "React Native : Bootom Tab Screen Navigation": {
    "prefix": "nav-tab-screen",
    "body": [
      "<Tab.Screen",
      "\tname=\"$1\"",
      "\tcomponent={$1}",
      "\toptions={",
      "\t\t{",
      "\t\t\ttitle: 'Title',",
      "\t\t\ttabBarVisible: true,",
      "\t\t\ttabBarIcon: settings => undefined, // React Element",
      "\t\t\ttabBarLabel: settings => undefined, // React Element",
      "\t\t\ttabBarButton: settings => undefined, // React Element",
      "\t\t\tunmountOnBlur: false, ",
      "\t\t}",
      "\t}",
      "/>"
    ]
  },
  "React Native : Bootom Tab Navigation With Redux": {
    "prefix": "nav-tab-redux",
    "body": [
      "import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';",
      "import * as React from 'react'",
      "import {StyleSheet} from 'react-native'",
      "//redux",
      "import {connect} from 'react-redux';",
      "import { bindActionCreators } from 'redux';",
      "",
      "//import actions here",
      "const Tab = createBottomTabNavigator();",
      "const $1 = () => {",
      "\treturn (",
      "\t\t<Tab.Navigator",
      "\t\t\tinitialRouteName=\"\"",
      "\t\t\tscreenOptions={{}}",
      "\t\t\t//tabBar={_=> null} // REact Element to display tab bar.",
      "\t\t\tbackBehavior=\"initialRoute\" // options (initialRoute, order, history, none) ",
      "\t\t\ttabBarOptions={",
      "\t\t\t\t{",
      "\t\t\t\t\tactiveTintColor:'black',",
      "\t\t\t\t\tactiveBackgroundColor:'white',",
      "\t\t\t\t\tinactiveTintColor:'grey',",
      "\t\t\t\t\tinactiveBackgroundColor:'lightgrey',",
      "\t\t\t\t\tshowLabel:true,",
      "\t\t\t\t\tshowIcon:true,",
      "\t\t\t\t\tstyle:{},",
      "\t\t\t\t\tlabelStyle:{},",
      "\t\t\t\t\tlabelPosition:'beside-icon', // options (below-icon) ",
      "\t\t\t\t\tkeyboardHidesTabBar:false,",
      "\t\t\t\t}",
      "\t\t\t}",
      "\t\t>",
      "\t\t\t<Tab.Screen",
      "\t\t\t\tname=\"Feed\"",
      "\t\t\t\tcomponent={Feed}",
      "\t\t\t\toptions={",
      "\t\t\t\t\t{",
      "\t\t\t\t\t\ttitle: 'Title',",
      "\t\t\t\t\t\ttabBarVisible: true,",
      "\t\t\t\t\t\ttabBarIcon: settings => undefined, // React Element",
      "\t\t\t\t\t\ttabBarLabel: settings => undefined, // React Element",
      "\t\t\t\t\t\ttabBarButton: settings => undefined, // React Element",
      "\t\t\t\t\t\tunmountOnBlur: false, ",
      "\t\t\t\t\t}",
      "\t\t\t\t}",
      "\t\t\t/>",
      "\t\t</Tab.Navigator>",
      "\t);",
      "}",
      "const mapStateToProps = state => {",
      "\treturn {",
      "\t\tstate",
      "\t};",
      "};",
      "const mapDispatchToProps = dispatch => ",
      "\tbindActionCreators(",
      "\t\t{",
      "\t\t\t//add actions here",
      "\t\t},",
      "\t\tdispatch,",
      "\t);",
      "",
      "export default connect(mapStateToProps, mapDispatchToProps)($1);"
    ]
  },
  "React Native : Material Bootom Tab Navigation": {
    "prefix": "nav-tab-m",
    "body": [
      "import { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';",
      "import * as React from 'react'",
      "import {StyleSheet} from 'react-native'",
      "const Tab = createMaterialBottomTabNavigator();",
      "const $1 = () => {",
      "\treturn (",
      "\t\t<Tab.Navigator",
      "\t\t\tinitialRouteName=\"\"",
      "\t\t\tscreenOptions={{}}",
      "\t\t\tshifting={true}",
      "\t\t\tlabeled={true}",
      "\t\t\tactiveColor={'white'}",
      "\t\t\tinactiveColor={'grey'}",
      "\t\t\tbarStyle={{}}",
      "\t\t\tbackBehavior=\"initialRoute\" // options (initialRoute, order, history, none) ",
      "\t\t>",
      "\t\t\t<Tab.Screen",
      "\t\t\t\tname=\"Feed\"",
      "\t\t\t\tcomponent={Feed}",
      "\t\t\t\toptions={",
      "\t\t\t\t\t{",
      "\t\t\t\t\t\ttitle: 'Title',",
      "\t\t\t\t\t\ttabBarColor: 'blue',",
      "\t\t\t\t\t\ttabBarIcon: settings => undefined, // React Element",
      "\t\t\t\t\t\ttabBarLabel: settings => undefined, // React Element",
      "\t\t\t\t\t\ttabBarBadge: '0'",
      "\t\t\t\t\t}",
      "\t\t\t\t}",
      "\t\t\t/>",
      "\t\t</Tab.Navigator>",
      "\t);",
      "}",
      "export default $1"
    ]
  },
  "React Native : Material Bootom Tab Screen": {
    "prefix": "nav-tab-m-screen",
    "body": [
      "<Tab.Screen",
      "\tname=\"$1\"",
      "\tcomponent={$1}",
      "\toptions={",
      "\t\t{",
      "\t\t\ttitle: 'Title',",
      "\t\t\ttabBarColor: 'blue',",
      "\t\t\ttabBarIcon: settings => undefined, // React Element",
      "\t\t\ttabBarLabel: settings => undefined, // React Element",
      "\t\t\ttabBarBadge: '0'",
      "\t\t}",
      "\t}",
      "/>"
    ]
  },
  "React Native : Material Bootom Tab Navigation With Redux": {
    "prefix": "nav-tab-m-redux",
    "body": [
      "import { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';",
      "import * as React from 'react'",
      "import {StyleSheet} from 'react-native'",
      "const Tab = createMaterialBottomTabNavigator();",
      "",
      "//redux",
      "import {connect} from 'react-redux';",
      "import { bindActionCreators } from 'redux';",
      "",
      "//import actions here",
      "const $1 = () => {",
      "\treturn (",
      "\t\t<Tab.Navigator",
      "\t\t\tinitialRouteName=\"\"",
      "\t\t\tscreenOptions={{}}",
      "\t\t\tshifting={true}",
      "\t\t\tlabeled={true}",
      "\t\t\tactiveColor={'white'}",
      "\t\t\tinactiveColor={'grey'}",
      "\t\t\tbarStyle={{}}",
      "\t\t\tbackBehavior=\"initialRoute\" // options (initialRoute, order, history, none) ",
      "\t\t>",
      "\t\t\t<Tab.Screen",
      "\t\t\t\tname=\"Feed\"",
      "\t\t\t\tcomponent={Feed}",
      "\t\t\t\toptions={",
      "\t\t\t\t\t{",
      "\t\t\t\t\t\ttitle: 'Title',",
      "\t\t\t\t\t\ttabBarColor: 'blue',",
      "\t\t\t\t\t\ttabBarIcon: settings => undefined, // React Element",
      "\t\t\t\t\t\ttabBarLabel: settings => undefined, // React Element",
      "\t\t\t\t\t\ttabBarBadge: '0'",
      "\t\t\t\t\t}",
      "\t\t\t\t}",
      "\t\t\t/>",
      "\t\t</Tab.Navigator>",
      "\t);",
      "}",
      "const mapStateToProps = state => {",
      "\treturn {",
      "\t\tstate",
      "\t};",
      "};",
      "const mapDispatchToProps = dispatch => ",
      "\tbindActionCreators(",
      "\t\t{",
      "\t\t\t//add actions here",
      "\t\t},",
      "\t\tdispatch,",
      "\t);",
      "",
      "export default connect(mapStateToProps, mapDispatchToProps)($1);"
    ]
  },
  "React Native : Material Top Tab Navigation": {
    "prefix": "nav-tab-top",
    "body": [
      "import { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';",
      "import * as React from 'react'",
      "import {StyleSheet} from 'react-native'",
      "const Tab = createMaterialTopTabNavigator();",
      "const $1 = () => {",
      "\treturn (",
      "\t\t<Tab.Navigator",
      "\t\t\tinitialRouteName=\"\"",
      "\t\t\tscreenOptions={{}}",
      "\t\t\tstyle={{}}",
      "\t\t\t//tabBar={ props => null} //Custom React Element",
      "\t\t\tswipeEnabled={true}",
      "\t\t\ttabBarPosition={'top'} // options (bottom) ",
      "\t\t\tkeyboardDismissMode=\"auto\" // options(on-drag, none)",
      "\t\t\tbackBehavior=\"initialRoute\" // options (initialRoute, order, history, none) ",
      "\t\t\ttabBarOptions={",
      "\t\t\t\t{",
      "\t\t\t\t\tactiveTintColor:'black',",
      "\t\t\t\t\tinactiveTintColor:'grey',",
      "\t\t\t\t\tpressColor:'lightgrey',",
      "\t\t\t\t\tscrollEnabled: false,",
      "\t\t\t\t\tshowLabel:true,",
      "\t\t\t\t\tshowIcon:true,",
      "\t\t\t\t\tstyle:{},",
      "\t\t\t\t\tlabelStyle:{},",
      "\t\t\t\t\ttabStyle:{},",
      "\t\t\t\t\tindicatorStyle:{},",
      "\t\t\t\t\ticonStyle:{},",
      "\t\t\t\t\t//renderIndicator:{_ => null}, // React Element",
      "\t\t\t\t\tkeyboardHidesTabBar:false,",
      "\t\t\t\t}",
      "\t\t\t}",
      "\t\t>",
      "\t\t\t<Tab.Screen",
      "\t\t\t\tname=\"Feed\"",
      "\t\t\t\tcomponent={Feed}",
      "\t\t\t\toptions={",
      "\t\t\t\t\t{",
      "\t\t\t\t\t\ttitle: 'Title',",
      "\t\t\t\t\t\ttabBarColor: 'blue',",
      "\t\t\t\t\t\ttabBarIcon: settings => undefined, // React Element",
      "\t\t\t\t\t\ttabBarLabel: settings => undefined, // React Element",
      "\t\t\t\t\t\ttabBarBadge: '0'",
      "\t\t\t\t\t}",
      "\t\t\t\t}",
      "\t\t\t/>",
      "\t\t</Tab.Navigator>",
      "\t);",
      "}",
      "export default $1"
    ]
  },
  "React Native : Material Top Tab Navigation Screen": {
    "prefix": "nav-tab-top-screen",
    "body": [
      "<Tab.Screen",
      "\tname=\"$1\"",
      "\tcomponent={$1}",
      "\toptions={",
      "\t\t{",
      "\t\t\ttitle: 'Title',",
      "\t\t\ttabBarColor: 'blue',",
      "\t\t\ttabBarIcon: settings => undefined, // React Element",
      "\t\t\ttabBarLabel: settings => undefined, // React Element",
      "\t\t\ttabBarBadge: '0'",
      "\t\t}",
      "\t}",
      "/>"
    ]
  },
  "React Native : Material Top Tab Navigation With Navigation": {
    "prefix": "nav-tab-top-redux",
    "body": [
      "import { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';",
      "import * as React from 'react'",
      "import {StyleSheet} from 'react-native'",
      "const Tab = createMaterialTopTabNavigator();",
      "",
      "//redux",
      "import {connect} from 'react-redux';",
      "import { bindActionCreators } from 'redux';",
      "",
      "//import actions here",
      "const $1 = () => {",
      "\treturn (",
      "\t\t<Tab.Navigator",
      "\t\t\tinitialRouteName=\"\"",
      "\t\t\tscreenOptions={{}}",
      "\t\t\tstyle={{}}",
      "\t\t\t//tabBar={ props => null} //Custom React Element",
      "\t\t\tswipeEnabled={true}",
      "\t\t\ttabBarPosition={'top'} // options (bottom) ",
      "\t\t\tkeyboardDismissMode=\"auto\" // options(on-drag, none)",
      "\t\t\tbackBehavior=\"initialRoute\" // options (initialRoute, order, history, none) ",
      "\t\t\ttabBarOptions={",
      "\t\t\t\t{",
      "\t\t\t\t\tactiveTintColor:'black',",
      "\t\t\t\t\tinactiveTintColor:'grey',",
      "\t\t\t\t\tpressColor:'lightgrey',",
      "\t\t\t\t\tscrollEnabled: false,",
      "\t\t\t\t\tshowLabel:true,",
      "\t\t\t\t\tshowIcon:true,",
      "\t\t\t\t\tstyle:{},",
      "\t\t\t\t\tlabelStyle:{},",
      "\t\t\t\t\ttabStyle:{},",
      "\t\t\t\t\tindicatorStyle:{},",
      "\t\t\t\t\ticonStyle:{},",
      "\t\t\t\t\t//renderIndicator:{_ => null}, // React Element",
      "\t\t\t\t\tkeyboardHidesTabBar:false,",
      "\t\t\t\t}",
      "\t\t\t}",
      "\t\t>",
      "\t\t\t<Tab.Screen",
      "\t\t\t\tname=\"Feed\"",
      "\t\t\t\tcomponent={Feed}",
      "\t\t\t\toptions={",
      "\t\t\t\t\t{",
      "\t\t\t\t\t\ttitle: 'Title',",
      "\t\t\t\t\t\ttabBarColor: 'blue',",
      "\t\t\t\t\t\ttabBarIcon: settings => undefined, // React Element",
      "\t\t\t\t\t\ttabBarLabel: settings => undefined, // React Element",
      "\t\t\t\t\t\ttabBarBadge: '0'",
      "\t\t\t\t\t}",
      "\t\t\t\t}",
      "\t\t\t/>",
      "\t\t</Tab.Navigator>",
      "\t);",
      "}",
      "const mapStateToProps = state => {",
      "\treturn {",
      "\t\tstate",
      "\t};",
      "};",
      "const mapDispatchToProps = dispatch => ",
      "\tbindActionCreators(",
      "\t\t{",
      "\t\t\t//add actions here",
      "\t\t},",
      "\t\tdispatch,",
      "\t);",
      "",
      "export default connect(mapStateToProps, mapDispatchToProps)($1);"
    ]
  }
}
